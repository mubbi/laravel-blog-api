name: SonarQube Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: sonar
          POSTGRES_PASSWORD: sonar_password
          POSTGRES_DB: sonar
          POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, redis
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Create environment file
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Start SonarQube
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            -e SONAR_JDBC_URL=jdbc:postgresql://localhost:5432/sonar \
            -e SONAR_JDBC_USERNAME=sonar \
            -e SONAR_JDBC_PASSWORD=sonar_password \
            -e SONAR_CE_JAVAOPTS="-Xmx3g -Xms1g" \
            -e SONAR_WEB_JAVAOPTS="-Xmx3g -Xms1g" \
            -e SONAR_SEARCH_JAVAOPTS="-Xmx1g -Xms1g" \
            sonarqube:25.7.0.110598-community

      - name: Wait for SonarQube to start
        run: |
          echo "Waiting for SonarQube to be ready..."
          timeout 300 bash -c 'until curl -s http://localhost:9000/api/system/status | grep -q "UP"; do sleep 5; done'

      - name: Run PHPStan analysis
        run: |
          mkdir -p reports
          ./vendor/bin/phpstan analyse --configuration=phpstan.neon --error-format=json > reports/phpstan.json || true

      - name: Run tests with coverage
        run: |
          php artisan test --coverage --coverage-clover reports/coverage.xml

      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://localhost:9000
        run: |
          chmod +x containers/sonarqube/scripts/sonar-analysis-ci.sh
          ./containers/sonarqube/scripts/sonar-analysis-ci.sh
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-reports
          path: |
            reports/coverage.xml
            reports/phpstan.json
            reports/coverage/

      - name: Comment PR with SonarQube results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const sonarUrl = `http://localhost:9000/dashboard?id=laravel-blog-api`;
            const comment = `
            ## ðŸ“Š SonarQube Analysis Results
            
            The SonarQube analysis has completed for this pull request.
            
            **[ðŸ“ˆ View detailed results on SonarQube](${sonarUrl})**
            
            ### Key Metrics:
            - Code Coverage: Check the detailed report
            - Quality Gate: See SonarQube dashboard
            - Technical Debt: Review maintainability rating
            
            Please review the results and address any issues before merging.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
